namespace = communalist


# Populist Faction Demand
# by Henrik Fåhraeus and Sean Hughes
communalist.0001 = {
	type = letter_event
	sender = scope:peasant_leader
	opening = {
		desc = "FACTION_DEMAND_COMMUNALIST"
	}
	desc = "FACTION_DEMAND_POPULIST_DESC"

	trigger = {
		exists = scope:faction
		exists = scope:peasant_leader
		scope:peasant_leader.joined_faction = scope:faction
	}

	on_trigger_fail = {
		debug_log = "Popular Faction tried to press claim (probably) without existing peasant_leader"
		debug_log_scopes = yes
		debug_log = "Popular Faction error reporting complete"
	}

	immediate = {
		every_realm_province = {
			county = { add_to_list = remaining_counties_list }
		}
		scope:faction = {
			every_faction_county_member = {
				remove_from_list = remaining_counties_list
				add_to_list = communalist_county_list
			}
		}
	}

	# Option B: Grant the faction demands.
	option = {
		name = "FACTION_DEMAND_COMMUNALIST_ACCEPT_GRANT_INDEPENDENCE"
		trigger = { # AI should not give the faction independence if a player is targeted by the faction.
			NAND = {
				scope:faction = {
					has_variable = faction_targets_player
				}
				is_ai = yes
			}
		}

		# This effect should always be placed here, _before_ all the other effects in the block.
		trigger_event = { on_action = on_faction_demand_accepted }

		scope:faction = {
			every_faction_member = {
				trigger_event = communalist.0002
			}
		}
		
		add_prestige_level = -1
		if = {
			limit = {
				dread > 0
			}
			add_dread = medium_dread_loss
		}

		successful_communalist_uprising_outcome_effect = {
			FACTION_LEADER = scope:peasant_leader
		}

		# Struggle Catalysts.
		# Should rename the Catalysts?
		if = {
			limit = {
				is_important_or_vip_struggle_character = yes
				any_character_struggle = {
					involvement = involved
					activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
						CATALYST = catalyst_accepted_demand_from_faction_requesting_culture_faith_conversion
						CHAR = scope:faction_leader
					}
				}
			}
			every_character_struggle = {
				involvement = involved
				limit = {
					activate_struggle_catalyst_secondary_character_involvement_either_trigger = {
						CATALYST = catalyst_accepted_demand_from_faction_requesting_culture_faith_conversion
						CHAR = scope:faction_leader
					}
				}
				activate_struggle_catalyst = {
					catalyst = catalyst_accepted_demand_from_faction_requesting_culture_faith_conversion
					character = root
				}
			}
		}

		hidden_effect = {
			if = {
				limit = {
					exists = scope:faction
				}
				scope:faction = {
					clean_revolt_county_modifiers_from_faction_members_effect = yes
					destroy_faction = yes
				}
			}
		}

		ai_chance = {
			base = 0
			compare_modifier = { # Stronger factions increase the chance of an AI ruler capitulating; at 200% ruler army strength, this maxes out at +50% chance to accept demands.
				value = {
					value = scope:faction.faction_power
					subtract = 100
					multiply = 0.5
				}
				max = 50
			}
			compare_modifier = { # Craven rulers can get up to +37% chance to accept demands.
				value = ai_boldness
				multiplier = -0.5
			}
			modifier = {
				factor = 0.1
				any_ally = {
					NOR = {
						target_is_liege_or_above = root
						target_is_vassal_or_below = root
					}
					max_military_strength > root.max_military_strength
				}
			}
			compare_modifier = {
				value = debt_level
				multiplier = 25
			}
			modifier = {
				add = -50
				is_at_war = no
				primary_title.tier >= tier_kingdom
			}
			modifier = {
				add = -150
				is_at_war = no
				primary_title.tier >= tier_empire
			}
			
			modifier = {
				add = -5000
				OR = {
					has_title = title:e_mongol_empire
					has_title = title:e_ilkhanate
					has_title = title:e_chagatai
					has_title = title:e_black_horde
					has_title = title:e_white_horde
					has_title = title:e_aarlud_khanate
					has_title = title:e_togskol_khanate
					has_title = title:e_baruun_khanate
					has_title = title:e_byzantium
				}
			}
		}
	}
	
	# Option C: Refuse the demand and start a war.
	option = {
		name = "FACTION_DEMAND_COMMUNALIST_REFUSE"

		# This effect should always be placed here, _before_ all the other effects in the block.
		trigger_event = { on_action = on_faction_demand_rejected }

		scope:faction_leader = { trigger_event = faction_demand.0003 }
		
		custom_tooltip = FACTION_DEMAND_COMMUNALIST_REFUSE_TT
		
		if = { # Send follow up event to affected vassals.
			limit = {
				list_size = {
					name = popular_faction_vassal_targets
					value > 0
				}
			}
			every_in_list = {
				list = popular_faction_vassal_targets
				trigger_event = communalist.0004
			}
		}

		ai_chance = {
			base = 100
			compare_modifier = { # Weaker factions increase the chance of an AI ruler refusing; at 80% army strength (minimum), this will be +20; at 200% army strength, this will max out at -50.
				value = {			
					value = scope:faction.faction_power
					subtract = 100
					multiply = -1
				}
				min = -50
			}
			compare_modifier = { # Brave rulers get up to a 50% bonus chance to refuse.
				value = ai_boldness
				multiplier = -0.5
				min = -50
			}
			modifier = {
				factor = 1.5
				any_ally = {
					NOR = {
						target_is_liege_or_above = root
						target_is_vassal_or_below = root
					}
					max_military_strength > root.max_military_strength
				}
			}
			compare_modifier = {
				value = debt_level
				multiplier = -25
			}
			modifier = {
				add = 5000
				OR = {
					has_title = title:e_mongol_empire
					has_title = title:e_ilkhanate
					has_title = title:e_chagatai
					has_title = title:e_black_horde
					has_title = title:e_white_horde
					has_title = title:e_aarlud_khanate
					has_title = title:e_togskol_khanate
					has_title = title:e_baruun_khanate
					has_title = title:e_byzantium
				}
			}
		}
	}
	
	after = {
		if = {
			limit = {
				exists = scope:faction
				scope:faction = {
					has_variable = faction_targets_player
				}
			}
			scope:faction = {
				remove_variable = faction_targets_player
			}
		}
	}
}

# Faction Demand Accepted
communalist.0002 = {
	type = letter_event
	sender = scope:faction_target
	opening = {
		desc = "FACTION_DEMAND_COMMUNALIST_ACCEPTED"
	}
	desc = "FACTION_DEMAND_COMMUNALIST_ACCEPTED_DESC"

	option = {
		name = "FACTION_DEMAND_ACCEPTED_OPT"
		custom_tooltip = communalist.0002.tt
	}
}

# Faction Demand Refused
faction_demand.0003 = {
	type = letter_event
	sender = scope:faction_target
	opening = {
		desc = "FACTION_DEMAND_INDEPENDENCE_REFUSED"
	}
	desc = "FACTION_DEMAND_INDEPENDENCE_REFUSED_DESC"

	option = {
		name = "FACTION_DEMAND_REFUSED_OPT"
		scope:faction = {
			faction_start_war = {}
			
			every_faction_member = {
				limit = { NOT = { this = scope:faction.faction_leader } }
				trigger_event = communalist.0004
			}
		}
	}
}

# Populist Faction Demand - Affected vassals choose their action
communalist.0004 = {
	type = letter_event
	sender = scope:peasant_leader
	opening = {
		desc = "FACTION_DEMAND_COMMUNALIST"
	}
	desc = "FACTION_DEMAND_COMMUNALIST_VASSAL_DESC"

	trigger = {
		exists = scope:faction
		exists = scope:peasant_leader
		scope:peasant_leader.joined_faction = scope:faction
	}
	
	immediate = {
		scope:faction.faction_war = {
			save_scope_as = populist_war
		}
	}
	
	# Option A: Convert to the faction's culture/faith and join the rebels.
	option = {
		name = "FACTION_DEMAND_POPULIST_VASSAL_JOIN_REBELS"
		trigger = {
			# Have to be of the same faith as the faction, or the faith must have a large enough presence in the vassal's realm.
			OR = {
				faith = { is_communalist_faith = yes }
				secret_faith = { is_communalist_faith =  }
				any_realm_province = {
					percent >= 0.20
					faith = { is_communalist_faith = yes }
				}
			}
			
			# Heads of Faith can never convert.
			NOT = { faith.religious_head = root }
			
			# Restrictions to stop the AI converting quite so freely
			trigger_if = {
				limit = {
					is_ai = yes
				}
				
				# Must be converting from a low-fervor faith to a higher-fervor faith.
				scope:faction_leader = { fervor >= 31 }
				faith = { fervor <= 30 }
				
				# Zealous rulers do not get the option to change faith.
				OR = {
					NOT = { has_trait = zealous }
					faith = { is_communalist_faith = yes }
				}
				
				# Crusaders & Crusader-Monarchs should never accept this.
				NOR = {
					has_trait = faith_warrior
					has_trait = crusader_king
					has_title = title:k_jerusalem
				}
			}
			
			# You cannot join the attacking side if you already are at war with another participant.
			scope:faction.faction_war = {
				NOT = {
					any_war_participant = {
						is_at_war_with = root
					}
				}
			}
			
			# You cannot join the attacking side if it would put you against someone you are fighting another war with.
			scope:faction.faction_war = {
				NOT = {
					any_war_defender = {
						any_war_ally = {
							this = root
						}
					}
				}
			}
		}
		if = {
			limit = {
				NOT = { faith = { is_communalist_faith = yes } }
			}
			set_character_faith = scope:faction_leader.faith
			if = {
				limit = { secret_faith ?= scope:faction_leader.faith }
				remove_character_secret_faith = yes
			}
			add_piety_level = -1
		}
		
		# Join the war.
		scope:faction.faction_war = {
			add_attacker = root
		}
		custom_tooltip = FACTION_DEMAND_POPULIST_VASSAL_CONVERTS_TT
		
		stress_impact = {
			zealous = massive_stress_gain
		}
		
		ai_chance = {
			base = 0
			
			# Want to convert for religious reasons
			modifier = {
				add = 20
				OR = {
					AND = {
						faith = { is_communalist_faith = yes }
						NOT = { faith = scope:faction_target.faith }
					}
					AND = {
						any_realm_province = {
							percent >= 0.40
							faith = { is_communalist_faith = yes }
						}
						NOT = { faith = scope:faction_target.faith }
					}
				}
			}
			modifier = {
				factor = 0
				culture = { has_cultural_tradition = tradition_zealous_people }
				NOT = { faith = { is_communalist_faith = yes } }
			}
			modifier = {
				factor = 1.5
				culture = { has_cultural_tradition = tradition_religion_blending }
			}
			modifier = {
				factor = 2
				has_trait = zealous
				faith = { is_communalist_faith = yes }
			}
			
			# General modifiers
			modifier = {
				factor = 1.25
				has_trait = fickle
			}
		}
	}
	
	# Option B: Fight alongside your liege.
	option = {
		name = FACTION_DEMAND_POPULIST_VASSAL_JOIN_WAR
		
		# You cannot join the defending side...
		trigger = {
			custom_tooltip = { # ... If you already are at war with another participant.
				text = FACTION_DEMAND_POPULIST_VASSAL_JOIN_WAR_BLOCK_TT
				scope:faction.faction_war = {
					NOT = {
						any_war_participant = {
							is_at_war_with = root
						}
					}
				}
			}
			custom_tooltip = { # ... If it would put you against someone you are fighting another war with.
				text = FACTION_DEMAND_POPULIST_VASSAL_JOIN_WAR_BLOCK_TT_2
				scope:faction.faction_war = {
					NOT = {
						any_war_attacker = {
							any_war_ally = {
								this = root
							}
						}
					}
				}
			}
		}
		show_as_unavailable = {
			OR = {
				scope:faction.faction_war = {
					any_war_participant = {
						is_at_war_with = root
					}
				}
				scope:faction.faction_war = {
					any_war_attacker = {
						any_war_ally = {
							this = root
						}
					}
				}
			}
		}
		
		# Join the war.
		scope:faction.faction_war = {
			add_defender = root
		}
		custom_tooltip = FACTION_DEMAND_POPULIST_VASSAL_JOIN_WAR_TT
		
		ai_chance = {
			base = 100
		}
	}
	
	# Option C: Do nothing.
	option = {
		name = FACTION_DEMAND_POPULIST_VASSAL_TAKE_NO_SIDE
		custom_tooltip = FACTION_DEMAND_POPULIST_VASSAL_TAKE_NO_SIDE_TT_A
		custom_tooltip = FACTION_DEMAND_POPULIST_VASSAL_TAKE_NO_SIDE_TT_B
		
		ai_chance = {
			base = 0
			
			modifier = {
				add = 20
				has_trait = craven
			}
		}
	}
}