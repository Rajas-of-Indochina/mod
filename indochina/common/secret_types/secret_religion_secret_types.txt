secret_religion = {
	category = religious

	is_valid = {
		scope:secret_owner = {
			exists = var:false_convert
			NOT = {
				has_faith = var:false_convert
			}
		}
	}

	is_shunned = {
		OR = {
			scope:target = {
				NOT = {
					has_faith = scope:secret_owner.var:false_convert
				}
			}
			scope:target.faith = {
				trait_is_sin = deceitful
				NOT = {
					has_doctrine_parameter = sanctioned_false_conversion
				}
			}
		}
		NOT = {
			secret_religion_is_criminal_trigger = yes
		}
	}

	is_criminal = {
		secret_religion_is_criminal_trigger = yes
	}

	# scope:discoverer -> the character who discovered the secret
	on_discover = {
		if = {
			limit = {
				can_be_exposed_by = scope:discoverer
				NOT = {
					scope:secret_owner = scope:discoverer
				}
			}
			scope:secret_owner = {
				faith = {
					save_scope_as = fake_faith
				}
			}
			save_scope_as = the_secret
			scope:discoverer = {
				trigger_event = secret_religion_event.0002
			}
		}
	}

	on_expose = {
		scope:secret_owner = {
			faith = {
				save_scope_as = fake_faith
			}
			var:false_convert = {
				save_temporary_scope_as = secret_faith
			}
			set_character_faith = scope:secret_faith
			set_variable = forbid_crypto_reconversion
		}
		save_scope_as = secret
		# this effect also covers event for self
		secret_religion_exposed_notification_effect = yes
		remove_variable = false_convert
	}

	on_owner_death = {
		if = {
			limit = {
				exists = scope:secret_owner.player_heir
			}
			save_scope_as = the_secret
			scope:secret_owner.player_heir = {
				trigger_event = secret_religion_event.0005
			}
		}
	}
}
