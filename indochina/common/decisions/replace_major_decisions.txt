
launch_hungarian_migration_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"
	major = yes

	ai_check_interval = 60

	desc = launch_hungarian_migration_decision_desc
	selection_tooltip = launch_hungarian_migration_decision_tooltip

	is_shown = {
		is_ruler = yes
		is_landed = yes
		exists = dynasty
		#Either be independent, or else not beneath another Mogyer.
		OR = {
			is_independent_ruler = yes
			NOT = { liege = { culture = culture:mogyer } }
		}
		#Must be a steppe Hungarian.
		culture = culture:mogyer
		#Must not already control a large chunk of Pannonia.
		NOT = {
			any_county_in_region = {
				region = custom_hungary
				count >= 12
				OR = {
					holder = root
					holder = {
						any_liege_or_above = { this = root }
					}
				}
			}
		}
		#You can only do it once.
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_launched_hungarian_migration
			}
		}
		#And the moment for the migration must not have passed.
		current_date <= 911.1.1
	}

	is_valid = {
		#An emperor does not voluntarily lose a tier.
		highest_held_title_tier <= tier_kingdom
		#Cannot be a settled people.
		government_has_flag = government_is_tribal
		#Reshow this here so that players realise they're on a timer.
		custom_description = {
			text = launch_hungarian_migration_decision_before_last_date
			current_date <= 911.1.1
		}
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		#Can't be fighting elsewhere.
		is_at_war = no
	}

	effect = {
		save_scope_as = invader
		custom_tooltip = launch_hungarian_migration_decision_flavour_effect
		add_character_flag = undertaking_hungarian_migration
		trigger_event = east_europe.0141
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_launched_hungarian_migration
			}
		}
	}

	cost = {
		#Charge a reasonable lump of prestige.
		prestige = 1000
	}

	ai_potential = {
		#AI decision making is governed via event.
		always = no
	}

	ai_will_do = {
		#AI decision making is governed via event.
		base = 0
	}
}

appoint_a_righteous_caliph_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	major = yes

	ai_check_interval = 120

	desc = appoint_a_righteous_caliph_decision_desc
	selection_tooltip = appoint_a_righteous_caliph_decision_tooltip

	is_shown = {
		# Standard filter checks.
		is_landed = yes
		exists = dynasty
		# Check some religious stuff; namely that you're the correct religion and your existing-HoF doesn't share your faith.
		religion = religion:islam_religion
		exists = faith.religious_head
		NOT = { faith = faith.religious_head.faith }
		# And filter out anyone who'd make this unreliable.
		OR = {
			has_government = tribal_government
			has_government = nomadic_government
			has_government = feudal_government
			has_government = clan_government
			gov_plus_clan_alternative = yes
			gov_plus_feudal_alternative = yes
		}
	}

	is_valid = {
		# Must be independent.
		is_independent_ruler = yes
		# Should have a decent piety level.
		piety_level >= high_piety_level
		# Must have a decent proportion of sub-realm counties of the faith.
		custom_description = {
			text = appoint_a_righteous_caliph_decision.need_at_least_ten_same_faith_counties
			any_sub_realm_county = {
				count >= appoint_a_righteous_caliph_decision_same_faith_county_count
				faith = root.faith
			}
		}
		# Can't be the current caliphal controller
		custom_description = {
			text = appoint_a_righteous_caliph_decision.cant_be_caliphal_controller
			NOT = {
				faith.religious_head = {
					any_liege_or_above = { this = root }
				}
			}
		}
		# Plus, you shouldn't be _too_ sinful, even with your piety level.
		custom_description = {
			text = appoint_a_righteous_caliph_decision.no_more_than_x_sinful_traits
			num_sinful_traits <= 2
		}
		# Now, pick any three of the valid reasons.
		calc_true_if = {
			amount >= 3

			# Sayyids get a free pass.
			has_trait = sayyid
			# Being outside of your caliph's diplo range helps.
			custom_description = {
				text = appoint_a_righteous_caliph_decision.caliph_not_in_diplo_range
				NOT = { in_diplomatic_range = faith.religious_head }
			}
			# Having a holy site.
			custom_description = {
				text = appoint_a_righteous_caliph_decision.control_one_holy_site
				faith = {
					any_holy_site = {
						count >= 1
						holder.top_liege = root
					}
				}
			}
			# Having *2* holy sites.
			custom_description = {
				text = appoint_a_righteous_caliph_decision.control_two_holy_sites
				faith = {
					any_holy_site = {
						count >= 2
						holder.top_liege = root
					}
				}
			}
			# Having a higher-than-minimum piety level.
			piety_level >= very_high_piety_level
			# And just having a caliph who doesn't live up to the root's faith's ideals.
			custom_description = {
				text = appoint_a_righteous_caliph_decision.caliph_has_x_or_more_traits_sinful_to_your_faith
				faith.religious_head = {
					num_sinful_traits = {
						value >= 2
						faith = root.faith
					}
				}
			}
			# Has planned to schism off for a *while*.
			custom_description = {
				text = appoint_a_righteous_caliph_decision.has_wishes_to_schism_caliphate_flag
				has_character_flag = wishes_to_schism_caliphate_flag
			}
		}
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		# Has to be around for the ceremony.
		# is_in_an_activity = no
		has_contagious_deadly_disease_trigger = no
		# Has to be a valid priestly gender for the current faith.
		faith = { has_allowed_gender_for_clergy = root }
	}

	effect = {
		save_scope_as = founder
		faith.religious_head = { save_scope_as = old_caliph }
		show_as_tooltip = { appoint_a_righteous_caliph_scripted_effect = yes }
		# Notify co-faithists; we do this first so we can sort the feed message for how many did/didn't convert.
		faith = {
			every_faith_ruler = {
				limit = {
					highest_held_title_tier >= tier_county
					NOT = { this = root }
				}
				trigger_event = religious_decision.0602
			}
		}
		# Now notify other players.
		every_player = {
			limit = {
				OR = {
					religion = religion:islam_religion
					any_neighboring_and_across_water_top_liege_realm_owner = { this = root }
					any_liege_or_above = { religion = religion:islam_religion }
				}
				# Exempt same-faith characters, who already got an event.
				NOT = { faith = root.faith }
			}
			# Players who share the faith get
			trigger_event = religious_decision.0603
		}
		# Finally, we trigger the main conversion.
		trigger_event = religious_decision.0601
	}

	cost = {
		gold = 500
		piety = 1000
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 0
		# We guide Muwalladi towards this at the first opportunity.
		modifier = {
			add = 500
			faith = faith:muwalladi
		}
		# People with strong religious views are more keen on this.
		modifier = {
			add = 100
			OR = {
				# Zealous people think they know better.
				has_trait = zealous
				# And cynics want that power for themselves.
				has_trait = cynical
			}
		}
	}
}
