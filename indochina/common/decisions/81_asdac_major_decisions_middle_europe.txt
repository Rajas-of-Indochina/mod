# Override Norman decision to add minorities
#############################
# Establish Norman Cultue 	#
# by Sean Hughes			#
#############################

establish_norman_culture_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"
	major = yes

	ai_check_interval = 120

	desc = establish_norman_culture_decision_desc
	selection_tooltip = establish_norman_culture_decision_tooltip

	is_shown = {
		culture = {
			OR = {
				this = culture:norse
				AND = {
					any_parent_culture_or_above = { this = culture:norse }
					has_cultural_pillar = heritage_north_germanic
				}
			}
		}
		any_sub_realm_county = {
			target_is_de_jure_liege_or_above = title:d_normandy
			culture = {
				OR = {
					this = culture:french
					AND = {
						any_parent_culture_or_above = { this = culture:french }
						has_cultural_pillar = heritage_frankish
					}
				}
			} # French (ish)
		}
		NOT = {	
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_formed_normandy_decision
			}
		}
	}

	is_valid = {
		culture = {
			OR = {
				this = culture:norse
				AND = {
					any_parent_culture_or_above = { this = culture:norse }
					has_cultural_pillar = heritage_north_germanic
				}
			}
		}
		any_realm_county = {
			duchy = title:d_normandy
			culture = {
				OR = {
					this = culture:french
					AND = {
						any_parent_culture_or_above = { this = culture:french }
						has_cultural_pillar = heritage_frankish
					}
				}
			}
		}
		completely_controls = title:d_normandy
	}

	is_valid_showing_failures_only = {
		is_at_war = no
		is_imprisoned = no
	}

	effect = {
		hidden_effect = {
			save_scope_as = norman_founder
			culture = {save_scope_as = old_culture_1}
			random_county = {
				limit = {
					target_is_de_jure_liege_or_above = title:d_normandy
					culture = {
						OR = {
							this = culture:french
							AND = {
								any_parent_culture_or_above = { this = culture:french }
								has_cultural_pillar = heritage_frankish
							}
						}
					} # French (ish)
				}
				culture = {save_scope_as = old_culture_2}
			}
			# Generate a list of counties we want to flip to the new culture.
			title:d_normandy = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_county}
					add_to_list = norman_counties
				}
			}
			
			every_sub_realm_title = {
				limit = {
					tier = tier_county
				}
				if = {
					limit = {
						title_province = { geographical_region = custom_normandy_and_adjacent }
						OR = {
							culture = {
								OR = {
									this = culture:french
									AND = {
										any_parent_culture_or_above = { this = culture:french }
										has_cultural_pillar = heritage_frankish
									}
								}
							} # French (ish)
							culture = {
								OR = {
									this = culture:norse
									AND = {
										any_parent_culture_or_above = { this = culture:norse }
										has_cultural_pillar = heritage_north_germanic
									}
								}
							}
						}
					}
					add_to_list = norman_counties
				}
			}

			# Perform the culture flip.
			every_in_list = {
				list = norman_counties
				save_scope_as = norman_county
				culture = { save_scope_as = old_culture }
				merge_cultures_in_region_effect = {
					OLD_CULTURE_1 = culture:norse
					OLD_CULTURE_2 = culture:french
					NEW_CULTURE = culture:norman
					REGION = custom_normandy_and_adjacent
				}
				add_culture_minority_effect = {
					CULTURE = scope:old_culture
					COUNTY = scope:norman_county
					SIZE = small
				}
				add_culture_minority_effect = {
					CULTURE = root.culture
					COUNTY = scope:norman_county
					SIZE = small
				}
			}

			# Send all players in the game a notification event about the flip.
			save_scope_as = norman_founder
			culture:norman = {
				reset_culture_creation_date = yes
				get_all_innovations_from = scope:old_culture_1
				get_all_innovations_from = scope:old_culture_2
				save_scope_as = new_culture
			}
			every_player = {
				if = {
					limit = {
						NOT = { this = root }
						OR = {
							culture = {
								OR = {
									this = culture:norse
									AND = {
										any_parent_culture_or_above = { this = culture:norse }
										has_cultural_pillar = heritage_north_germanic
									}
								}
							}
							culture = {
								OR = {
									this = culture:french
									AND = {
										any_parent_culture_or_above = { this = culture:french }
										has_cultural_pillar = heritage_frankish
									}
								}
							} # French (ish)
						}
						exists = capital_province
						capital_province = { geographical_region = custom_normandy_and_adjacent }
					}
					trigger_event = global_culture.3002
				}
				else_if = {
					limit = { this = root }
					trigger_event = global_culture.3003
				}
				else_if = {
					limit = {
						exists = capital_province
						capital_province = { geographical_region = world_europe }
					}
					trigger_event = global_culture.3005
				}
			}
		}

		# Player changes culture
		set_culture = culture:norman
		add_character_flag = converted_culture_this_lifetime
		hidden_effect = {
			every_in_list = {
				list = norman_counties
				limit = {
					holder.capital_county = { is_in_list = norman_counties }
				}
				holder = {
					add_to_list = mass_melting_pot_list
					every_courtier = { add_to_list = mass_melting_pot_list }
					every_courtier_away = { add_to_list = mass_melting_pot_list }
				}
				every_in_list = {
					list = mass_melting_pot_list
					limit = {
						OR = {
							culture = {
								OR = {
									this = culture:norse
									AND = {
										any_parent_culture_or_above = { this = culture:norse }
										has_cultural_pillar = heritage_north_germanic
									}
								}
							}
							culture = {
								OR = {
									this = culture:french
									AND = {
										any_parent_culture_or_above = { this = culture:french }
										has_cultural_pillar = heritage_frankish
									}
								}
							} # French (ish)
						}
					}
					set_culture = culture:norman
				}
			}
		}

		# Summary of above hidden effects to inform players of the decision's impact.
		show_as_tooltip = {
			custom_tooltip = establish_norman_culture_decision_effect.tt
			culture:norman = {
				get_all_innovations_from = scope:old_culture_1
				get_all_innovations_from = scope:old_culture_2
			}
		}

		# Rename the duchy to Normandy
		title:d_normandy = {
			save_scope_as = normandy_title
			hidden_effect = {
				set_title_name = d_normandy
			}
			custom_tooltip = establish_norman_culture_decision_effect.tt.2
		}
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:flag_formed_normandy_decision
		}
	}

	cost = {
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			any_sub_realm_county = {
				percent >= 0.5
				culture = {
					any_parent_culture_or_above = { this = culture:french }
					has_cultural_pillar = heritage_frankish
				} # French (ish)
			}
		}
	}
}