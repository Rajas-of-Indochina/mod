convert_to_administrative_from_feudalism_game_start_effect = {
	if = {
		limit = { has_dlc_feature = roads_to_power }
		# Because we run this twice, since folks can change in the lobby.
		if = {
			limit = {
				NOT = { government_has_flag = government_is_administrative }
			}
			change_government = administrative_government
			create_noble_family_effect = yes
			add_to_list = estatified_list
		}

		every_vassal_or_below = {
			limit = {
				highest_held_title_tier >= tier_county
				OR = {
					government_has_flag = government_is_feudal
					government_has_flag = government_is_clan
					#government_has_flag = government_is_tribal
					government_has_flag = government_is_mandala
				}
				NOR = {
					faith.religious_head ?= this
					liege = {
						faith.religious_head ?= this
						is_independent_ruler = no
					}
					AND = {
						exists = scope:ignore_culture
						culture = scope:ignore_culture
					}
				}
			}
			change_to_administrative_effect = yes
		}
	}
}

unite_india_decision_effect = {
	#Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_india = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:e_india

	title:e_rajastan = { add_to_list = indian_empire }
	title:e_deccan = { add_to_list = indian_empire }
	title:e_bengal = { add_to_list = indian_empire }
	if = {
		limit = {
			NOT = {
				is_titular = title:e_hindustan
			}
		}
		title:e_hindustan = { add_to_list = indian_empire }
	}

	every_in_list = {
		list = indian_empire
		every_in_de_jure_hierarchy = {
			limit = {
				tier = tier_kingdom
			}
			set_de_jure_liege_title = title:e_india
		}
	}

	hidden_effect = {
		if = {
			limit = { has_title = title:e_rajastan }
			destroy_title = title:e_rajastan
		}
		if = {
			limit = { has_title = title:e_deccan }
			destroy_title = title:e_deccan
		}
		if = {
			limit = { has_title = title:e_bengal }
			destroy_title = title:e_bengal
		}
		if = {
			limit = { has_title = title:e_hindustan }
			destroy_title = title:e_hindustan
		}
	}
}

fp3_end_persian_struggle_effect = {
	if = {
		limit = {
			exists = title:e_arabia.holder
			title:e_arabia.holder = { has_character_modifier = fp3_struggle_caliph_super_suspicious_modifier }
		}
		title:e_arabia.holder = { remove_character_modifier = fp3_struggle_caliph_super_suspicious_modifier }
	}

	every_in_global_list = { # We de-flag chars (surprisingly performance friendly, from all possible options)
		variable = fp3_intro_flag_character_list
		if = {
			limit = { has_character_flag = fp3_struggle_intro_event_flag } # Since only alive chars have flags, we don't need to check for anything else
			remove_character_flag = fp3_struggle_intro_event_flag
		}
	}

	# Global variable tracking.
	## For usage in councillor tasks.
	set_global_variable = {
		name = fp3_struggle_ending
		value = $FLAG$
	}
	## For debug purposes.
	if = {
		limit = { gather_debug_variables_for_persian_struggle_trigger = yes }
		increment_global_variable_effect = {
			VAL = current_year
			VAR = sp_end_date
		}
	}

	every_player = {
		limit = { fp3_does_this_player_care_about_the_persian_struggle = yes } # Needs to be checked before the struggle ends due to race condition issues
		add_to_list = player_to_notify # Making a list so stuff is tiggered after the struggle ends, to make extra sure I don't break anything.
	}

	every_in_list = { # Then we *actually* notify palyers, making sure the struggle has already ended
		list = player_to_notify
		limit = {
			NOT = { this = root }
		}
		trigger_event = $EVENT$
	}

	if = {
		limit = {
			exists = struggle:armenian_struggle
			global_var:fp3_struggle_ending = flag:fp3_struggle_concession_ending
		}
		struggle:armenian_struggle ?= {
			activate_struggle_catalyst = catalyst_intermezzo_victory
		}
	}

	struggle:persian_struggle ?= { end_struggle = $ENDING$ }
}