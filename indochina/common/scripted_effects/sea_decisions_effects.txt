
# Override Vanilla

#####

convert_whole_realm_to_feudalism_effect = {

	## What do we convert to?

	# IF independent, take gov depending on doctrines
	# If not independent, depends on liege
		# IF liege is feudal, become feudal
		# If liege is clan, become clan
		# If liege is neither, depends on doctrines

	## Not independent, take liege's gov
	if = {
		limit = {
			is_independent_ruler = no
		}
		if = {
			limit = {
				liege = { has_government = clan_government }
			}
			change_government = clan_government
		}
		else_if = {
			limit = {
				liege = { has_government = feudal_government }
			}
			change_government = feudal_government
		}
		else_if = {
			limit = {
				liege = { has_government = mandala_government }
			}
			change_government = mandala_government
		}
		# Liege is tribal so take gov depending on faith doctrines
		else = {
			if = {
				limit = {
					faith = { has_doctrine = doctrine_right_to_rule_divine }
				}
				change_government = feudal_government
			}
			## doctrine_right_to_rule_rajadharma
			else_if = {
				limit = {
					faith = { has_doctrine = doctrine_right_to_rule_rajadharma }
				}
				change_government = mandala_government
			}
			## doctrine_right_to_rule_material
			else = {
				change_government = clan_government
			}
		}
	}
	## Independent, take gov depending on faith doctrines
	else = {
		if = {
			limit = {
				faith = { has_doctrine = doctrine_right_to_rule_divine }
			}
			change_government = feudal_government
		}
		## doctrine_right_to_rule_rajadharma
		else_if = {
			limit = {
				faith = { has_doctrine = doctrine_right_to_rule_rajadharma }
			}
			change_government = mandala_government
		}
		## doctrine_right_to_rule_material
		else = {
			change_government = clan_government
		}
	}

	##General
	#custom_tooltip = all_holding_will_change

	capital_county = {
		title_province = {
			if = {
				limit = { has_holding_type = tribal_holding }
				set_holding_type = castle_holding
				add_province_modifier = {
					modifier = converted_to_feudal_county_modifier
					years = 10
				}
			}
		}
	}


	##Sort out new laws.
	hidden_effect = {

		#Nuke tribal authorities.
		if = {
			limit = { has_realm_law = tribal_authority_0 }
			remove_realm_law = tribal_authority_0
		}
		if = {
			limit = { has_realm_law = tribal_authority_1 }
			remove_realm_law = tribal_authority_1
		}
		if = {
			limit = { has_realm_law = tribal_authority_2 }
			remove_realm_law = tribal_authority_2
		}
		if = {
			limit = { has_realm_law = tribal_authority_3 }
			remove_realm_law = tribal_authority_3
		}
		#Start off crown authorities.
		if = {
			limit = {
				has_government = mandala_government
				NOT = { has_realm_law = mandala_authority_0 }
			}
			add_realm_law_skip_effects = mandala_authority_0
		}
		else_if = {
			limit = {
				NOT = { has_realm_law = crown_authority_0 }
			}
			add_realm_law_skip_effects = crown_authority_0
		}
	}

	#VASSAL EFFECTS
	#Also convert every vassal.
	hidden_effect = {
		#Liege has taken clan, so become clan.
		if = {
			limit = {
				has_government = clan_government
			}
			every_vassal = {
				limit = { has_government = tribal_government }
				change_government = clan_government
				#Nuke tribal authorities.
				if = {
					limit = { has_realm_law = tribal_authority_0 }
					remove_realm_law = tribal_authority_0
				}
				if = {
					limit = { has_realm_law = tribal_authority_1 }
					remove_realm_law = tribal_authority_1
				}
				if = {
					limit = { has_realm_law = tribal_authority_2 }
					remove_realm_law = tribal_authority_2
				}
				if = {
					limit = { has_realm_law = tribal_authority_3 }
					remove_realm_law = tribal_authority_3
				}
				if = {
					limit = {
						NOT = { has_realm_law = crown_authority_0 }
					}
					add_realm_law_skip_effects = crown_authority_0
				}
			}
		}
		#Liege has taken mandala, so become mandala.
		if = {
			limit = {
				has_government = mandala_government
			}
			every_vassal = {
				limit = { has_government = tribal_government }
				change_government = mandala_government
				#Nuke tribal authorities.
				if = {
					limit = { has_realm_law = tribal_authority_0 }
					remove_realm_law = tribal_authority_0
				}
				if = {
					limit = { has_realm_law = tribal_authority_1 }
					remove_realm_law = tribal_authority_1
				}
				if = {
					limit = { has_realm_law = tribal_authority_2 }
					remove_realm_law = tribal_authority_2
				}
				if = {
					limit = { has_realm_law = tribal_authority_3 }
					remove_realm_law = tribal_authority_3
				}
				if = {
					limit = {
						NOT = { has_realm_law = mandala_authority_0 }
					}
					add_realm_law_skip_effects = mandala_authority_0
				}
			}
		}
		#Liege is not clan, become feudal.
		else = {
			every_vassal = {
				limit = { has_government = tribal_government }
				change_government = feudal_government
				#Nuke tribal authorities.
				if = {
					limit = { has_realm_law = tribal_authority_0 }
					remove_realm_law = tribal_authority_0
				}
				if = {
					limit = { has_realm_law = tribal_authority_1 }
					remove_realm_law = tribal_authority_1
				}
				if = {
					limit = { has_realm_law = tribal_authority_2 }
					remove_realm_law = tribal_authority_2
				}
				if = {
					limit = { has_realm_law = tribal_authority_3 }
					remove_realm_law = tribal_authority_3
				}
				if = {
					limit = {
						NOT = { has_realm_law = crown_authority_0 }
					}
					add_realm_law_skip_effects = crown_authority_0
				}
			}
		}

		every_vassal = {			
			capital_county = {
				every_county_province = {
					barony = {
						if = {
							limit = { has_holding_type = tribal_holding }
							set_holding_type = castle_holding
							add_province_modifier = {
								modifier = converted_to_feudal_county_modifier
								years = 10
							}
						}
					}
				}
			}
		}
	}
}

#####

adopt_bureaucracy_effect = {

	##Sort out new laws.
	if = {
		limit = {
			OR = {
				has_government = tribal_government
				has_government = nomadic_government
			}
		}
		capital_county = {
			every_county_province = {
				if = {
					limit = { has_holding_type = tribal_holding }
					set_holding_type = castle_holding
					add_province_modifier = {
						modifier = converted_to_feudal_county_modifier
						years = 10
					}
				}
			}
		}
		change_government = chinese_government
		#Start off crown authorities.
		if = {
			limit = {highest_held_title_tier = tier_empire}
			add_realm_law_skip_effects = bureaucratic_authority_0
		}
		else = {
			add_realm_law_skip_effects = bureaucratic_vassal_authority_0
		}		
		custom_tooltip = all_holding_will_change
		hidden_effect = {
			#Nuke tribal authorities.
			if = {
				limit = { has_realm_law = tribal_authority_0 }
				remove_realm_law = tribal_authority_0
			}
			if = {
				limit = { has_realm_law = tribal_authority_1 }
				remove_realm_law = tribal_authority_1
			}
			if = {
				limit = { has_realm_law = tribal_authority_2 }
				remove_realm_law = tribal_authority_2
			}
			if = {
				limit = { has_realm_law = tribal_authority_3 }
				remove_realm_law = tribal_authority_3
			}
		}
	}

	#VASSAL EFFECTS
	#Also convert every vassal.
	hidden_effect = {
		#Liege has taken clan, so become clan.
		every_vassal = {
			limit = {
				OR = {
					has_government = tribal_government
					has_government = nomadic_government
				}
			}
			#Nuke tribal authorities.
			if = {
				limit = { has_realm_law = tribal_authority_0 }
				remove_realm_law = tribal_authority_0
			}
			if = {
				limit = { has_realm_law = tribal_authority_1 }
				remove_realm_law = tribal_authority_1
			}
			if = {
				limit = { has_realm_law = tribal_authority_2 }
				remove_realm_law = tribal_authority_2
			}
			if = {
				limit = { has_realm_law = tribal_authority_3 }
				remove_realm_law = tribal_authority_3
			}
			capital_county = {
				every_county_province = {
					if = {
						limit = { has_holding_type = tribal_holding }
						set_holding_type = castle_holding
						add_province_modifier = {
							modifier = converted_to_feudal_county_modifier
							years = 10
						}
					}
				}
			}
			change_government = chinese_government
			add_realm_law_skip_effects = bureaucratic_authority_0
		}
	}
}

unite_nusantara_decision_effect = {
	#Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_nusantara = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:e_nusantara

	if = {
		limit = {
			OR = {
				culture = { has_cultural_pillar = heritage_filipino }
				culture = { has_cultural_pillar = heritage_lumad }
				has_title = title:e_panyupayana
				completely_controls = title:e_panyupayana
			}
		}
		title:e_panyupayana = { add_to_list = nusantara_empire }
	}

	title:e_srivijaya = { add_to_list = nusantara_empire }
	title:e_kalimantan = { add_to_list = nusantara_empire }
	title:e_sulawesi = { add_to_list = nusantara_empire }
	title:e_maluku = { add_to_list = nusantara_empire }
	title:e_java = { add_to_list = nusantara_empire }
	title:e_majapahit = { add_to_list = nusantara_empire }

	every_in_list = {
		list = nusantara_empire
		every_in_de_jure_hierarchy = {
			limit = {
				tier = tier_kingdom
			}
			set_de_jure_liege_title = title:e_nusantara
		}
	}

	hidden_effect = {
		if = {
			limit = { has_title = title:e_panyupayana }
			destroy_title = title:e_panyupayana
		}
		if = {
			limit = { has_title = title:e_srivijaya }
			destroy_title = title:e_srivijaya
		}
		if = {
			limit = { has_title = title:e_kalimantan }
			destroy_title = title:e_kalimantan
		}
		if = {
			limit = { has_title = title:e_sulawesi }
			destroy_title = title:e_sulawesi
		}
		if = {
			limit = { has_title = title:e_maluku }
			destroy_title = title:e_maluku
		}
	}
}

reform_nanyue_decision_effect = {
	#Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_nanyue = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change

	set_primary_title_to = title:e_nanyue

	if = {
		limit = {
			completely_controls = title:k_champa
		}
		title:k_champa = { set_de_jure_liege_title = title:e_nanyue }
	}
	else = {
		title:d_vijaya = { set_de_jure_liege_title = title:k_annam }
		title:d_amaravati = { set_de_jure_liege_title = title:k_annam }
		title:d_tribhuvanadevi = { set_de_jure_liege_title = title:k_annam }
	}
	title:k_annam = { set_de_jure_liege_title = title:e_nanyue }
	title:k_nanyue_china = { set_de_jure_liege_title = title:e_nanyue }

	if = {
		limit = { has_title = title:e_dai_viet }
		destroy_title = title:e_dai_viet
	}

	# Additionally give your culture a unique tradition or something
}

form_lanna_decision_effect = {
	save_scope_as = founder

	#Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_haripunjaya = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:k_haripunjaya

	#Covert self & court to Lanna culture
	if = {
		limit = { NOT = { has_culture = culture:lanna } }

		every_courtier = {
			limit = { has_same_culture_as = scope:founder }
			add_to_list = convert_list
		}
		#transfer over innovations from previous culture.
		culture:lanna = {
			hidden_effect = { reset_culture_creation_date = yes }
			get_all_innovations_from = scope:founder.culture
		}
		set_culture = culture:lanna

		every_in_list = {
			list = convert_list
			custom = lanna_convert_list #This says "every subject in the realm" even though vassals and their courts only covert later, through event
			set_culture = culture:lanna
		}

		every_vassal_or_below = {
			limit = {
				is_ai = yes
				culture = { has_cultural_pillar = heritage_tai }
				exists = capital_province
				capital_province = {
					county = {
						OR = {
							de_jure_liege = title:d_chiang_saen
							de_jure_liege = title:d_chiang_mai
							de_jure_liege = title:d_haripunjaya
						}
					}
				}
			}
			set_culture = culture:lanna
		}
	}

	# Convert Tai counties to Siamese culture
	every_sub_realm_county = {
		limit = {
			tier = tier_county
			culture = { has_cultural_pillar = heritage_tai }
			OR = {
				de_jure_liege = title:d_chiang_saen
				de_jure_liege = title:d_chiang_mai
				de_jure_liege = title:d_haripunjaya
			}
		}
		set_county_culture = culture:lanna
	}
}

form_ayutthaya_decision_effect = {
	save_scope_as = founder

	#Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_lavapura = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
		set_title_name = k_ayutthaya
		set_coa = k_ayutthaya
	}
	hidden_effect = {
		if = {
			limit = {
				NOT = { root = { has_title = title:c_ayutthaya } }
			}
			title:c_ayutthaya = {
				change_title_holder = {
					holder = root
					change = scope:title_change
				}
			}
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:k_lavapura
	set_realm_capital = title:c_ayutthaya

	#Covert self & court to Siamese culture
	if = {
		limit = { NOT = { has_culture = culture:siamese } }

		every_courtier = {
			limit = { has_same_culture_as = scope:founder }
			add_to_list = convert_list
		}
		#transfer over innovations from previous culture.
		culture:siamese = {
			hidden_effect = { reset_culture_creation_date = yes }
			get_all_innovations_from = scope:founder.culture
		}
		set_culture = culture:siamese

		every_in_list = {
			list = convert_list
			custom = siamese_convert_list #This says "every subject in the realm" even though vassals and their courts only covert later, through event
			set_culture = culture:siamese
		}

		every_vassal_or_below = {
			limit = {
				is_ai = yes
				culture = { has_cultural_pillar = heritage_tai }
				exists = capital_province
				capital_province = {
					county = {
						OR = {
							de_jure_liege = title:d_lavapura
							de_jure_liege = title:d_u_thong
							de_jure_liege = title:d_pribpri
						}
					}
				}
			}
			set_culture = culture:siamese
		}
	}

	# Convert Tai counties to Siamese culture
	every_sub_realm_county = {
		limit = {
			tier = tier_county
			culture = { has_cultural_pillar = heritage_tai }
			OR = {
				de_jure_liege = title:d_lavapura
				de_jure_liege = title:d_u_thong
				de_jure_liege = title:d_pribpri
			}
		}
		set_county_culture = culture:siamese
	}
}

form_lanxang_decision_effect = {
	save_scope_as = founder

	#Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_laos = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
		set_title_name = k_lanxang
	}
	hidden_effect = {
		if = {
			limit = {
				NOT = { root = { has_title = title:c_luang_prabang } }
			}
			title:c_luang_prabang = {
				change_title_holder = {
					holder = root
					change = scope:title_change
				}
			}
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:k_laos
	set_realm_capital = title:c_luang_prabang

	#Covert self & court to Lao culture
	if = {
		limit = { NOT = { has_culture = culture:lao } }

		every_courtier = {
			limit = { has_same_culture_as = scope:founder }
			add_to_list = convert_list
		}
		#transfer over innovations from previous culture.
		culture:lao = {
			hidden_effect = { reset_culture_creation_date = yes }
			get_all_innovations_from = scope:founder.culture
		}
		set_culture = culture:lao

		every_in_list = {
			list = convert_list
			custom = lao_convert_list #This says "every subject in the realm" even though vassals and their courts only covert later, through event
			set_culture = culture:lao
		}

		every_vassal_or_below = {
			limit = {
				is_ai = yes
				culture = { has_cultural_pillar = heritage_tai }
				exists = capital_province
				capital_province = {
					county = {
						OR = {
							de_jure_liege = title:d_luang_prabang
							de_jure_liege = title:d_xiangkhouang
							de_jure_liege = title:d_chantabuli
						}
					}
				}
			}
			set_culture = culture:lao
		}
	}

	# Convert Tai counties to Siamese culture
	every_sub_realm_county = {
		limit = {
			tier = tier_county
			culture = { has_cultural_pillar = heritage_tai }
			OR = {
				de_jure_liege = title:d_luang_prabang
				de_jure_liege = title:d_xiangkhouang
				de_jure_liege = title:d_chantabuli
			}
		}
		set_county_culture = culture:lao
	}
}

unite_the_javanese_thrones_decision_effects = {
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_jawa = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:k_jawa
	if = {
		limit = {
			NOT = { title:k_janggala.holder = ROOT }
			exists = title:k_janggala.holder
		}
		title:k_janggala.holder = {
			add_opinion = {
				modifier = usurped_title
				target = ROOT
			}
		}
	}
	if = {
		limit = {
			NOT = { title:k_panjalu.holder = ROOT }
			exists = title:k_panjalu.holder
		}
		title:k_panjalu.holder = {
			add_opinion = {
				modifier = usurped_title
				target = ROOT
			}
		}
	}
	destroy_title = title:k_janggala
	destroy_title = title:k_panjalu
	title:k_janggala = {
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy }
			set_de_jure_liege_title = title:k_jawa
		}
	}
	title:k_panjalu = {
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy }
			set_de_jure_liege_title = title:k_jawa
		}
	}
}

form_majapahit_empire_effect = {
	every_kingdom = {
		limit = {
			OR = {
				empire = title:e_srivijaya
				empire = title:e_java
				empire = title:e_kalimantan
			}
			OR = {
				holder = ROOT
				ROOT = { completely_controls = PREV }
			}
			is_titular = no
		}
		add_to_list = majapahit_kingdoms
	}
	every_in_list = {
		list = majapahit_kingdoms
		set_de_jure_liege_title = title:e_majapahit
	}
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_majapahit = {
		change_title_holder = {
			holder = ROOT
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change

	dynasty = {
		add_dynasty_modifier = majapahit_founder_dynn_modifier
	}
}

settle_nomadic_realm_effect = {
	#Sort out new laws
	change_government = tribal_government
	hidden_effect = {
		if = {
			limit = { has_realm_law = nomadic_authority_0 }
			remove_realm_law = nomadic_authority_0
		}
		if = {
			limit = { has_realm_law = nomadic_authority_1 }
			remove_realm_law = nomadic_authority_1
		}
		if = {
			limit = { has_realm_law = nomadic_authority_2 }
			remove_realm_law = nomadic_authority_2
		}
		if = {
			limit = { has_realm_law = nomadic_authority_3 }
			remove_realm_law = nomadic_authority_3
		}
		add_realm_law_skip_effects = tribal_authority_0
	}

	#VASSAL EFFECTS
	#Also convert every vassal.
	hidden_effect = {
		every_vassal_or_below = {
			change_government = tribal_government
			if = {
				limit = { has_realm_law = nomadic_authority_0 }
				remove_realm_law = nomadic_authority_0
			}
			if = {
				limit = { has_realm_law = nomadic_authority_1 }
				remove_realm_law = nomadic_authority_1
			}
			if = {
				limit = { has_realm_law = nomadic_authority_2 }
				remove_realm_law = nomadic_authority_2
			}
			if = {
				limit = { has_realm_law = nomadic_authority_3 }
				remove_realm_law = nomadic_authority_3
			}
			add_realm_law_skip_effects = tribal_authority_0
		}
	}
}

unsettle_nomadic_realm_effect = {
	#Sort out new laws
	change_government = nomadic_government
	hidden_effect = {
		if = {
			limit = { has_realm_law = tribal_authority_0 }
			remove_realm_law = tribal_authority_0
		}
		if = {
			limit = { has_realm_law = tribal_authority_1 }
			remove_realm_law = tribal_authority_1
		}
		if = {
			limit = { has_realm_law = tribal_authority_2 }
			remove_realm_law = tribal_authority_2
		}
		if = {
			limit = { has_realm_law = tribal_authority_3 }
			remove_realm_law = tribal_authority_3
		}
		add_realm_law_skip_effects = nomadic_authority_0
	}

	#VASSAL EFFECTS
	#Also convert every vassal.
	hidden_effect = {
		every_vassal_or_below = {
			limit = {
				has_government = tribal_government
				culture = { has_cultural_tradition = tradition_horse_lords }
			}

			change_government = nomadic_government
			hidden_effect = {
				if = {
					limit = { has_realm_law = tribal_authority_0 }
					remove_realm_law = tribal_authority_0
				}
				if = {
					limit = { has_realm_law = tribal_authority_1 }
					remove_realm_law = tribal_authority_1
				}
				if = {
					limit = { has_realm_law = tribal_authority_2 }
					remove_realm_law = tribal_authority_2
				}
				if = {
					limit = { has_realm_law = tribal_authority_3 }
					remove_realm_law = tribal_authority_3
				}
				add_realm_law_skip_effects = nomadic_authority_0
			}
		}
	}
}
reform_indo_hellenism_effect = {
	faith:indo_hellenism = {
		#Remove conversion block
		remove_variable = block_conversion_till_decision_taken
		# And you are organizing this faith
		set_variable = { name = has_been_reformed }
		remove_doctrine = unreformed_faith_doctrine
	}

	set_character_faith_with_conversion = faith:indo_hellenism
}

greco_buddhism_effect = {
	faith:indo_hellenism = {
		remove_doctrine = tenet_adaptive
		add_doctrine = tenet_dharmic_pacifism
		add_doctrine = doctrine_right_to_rule_rajadharma
		add_doctrine = special_doctrine_is_buddhist_faith
	}
}

greco_hinduism_effect = {
	faith:indo_hellenism = {
		remove_doctrine = tenet_adaptive
		add_doctrine = tenet_monasticism
		add_doctrine = doctrine_right_to_rule_rajadharma
		add_doctrine = special_doctrine_is_hinduism_faith
		add_doctrine = sampradaya_vaishnavism_doctrine
	}
}

greco_zoroastrianism_effect = {
	faith:indo_hellenism = {
		remove_doctrine = tenet_adaptive
		add_doctrine = tenet_sky_burials
		add_doctrine = doctrine_right_to_rule_divine
		remove_doctrine = doctrine_no_head
		add_doctrine = doctrine_spiritual_head
	}
	if = {
		limit = {
			can_create_head_of_faith_title_trigger = { FAITH = faith:indo_hellenism }
		}
		faith:indo_hellenism = {
			save_scope_as = faith
		}
		create_head_of_faith_title_effect = yes
	}
}

indo_greek_flexibility = {
	faith:indo_hellenism = {
		add_doctrine = doctrine_right_to_rule_divine
		add_doctrine = tenet_unreformed_syncretism
	}
}

indo_greek_de_jure_effect = {
	title:k_sindh = {
		add_to_temporary_list = igk
	}
	title:k_punjab = {
		add_to_temporary_list = igk
	}
	title:k_kashmir = {
		add_to_temporary_list = igk
	}
	title:k_makran = {
		add_to_temporary_list = igk
	}
	title:k_kabulistan = {
		add_to_temporary_list = igk
	}

	every_in_list = {
		list = igk
		limit = {
			OR = {
				this = title:k_sindh
				this = title:k_punjab
				this.holder = ROOT
				ROOT = {
					completely_controls = PREV
				}
			}
		}
		set_de_jure_liege_title = title:e_indo_greek_kingdom
	}
}

indo_greek_culture_decision_effect = {
	set_culture = culture:indo_greek
	culture:indo_greek = {
		reset_culture_creation_date = yes
	}
	custom_tooltip = {
		text = yavana_counties_conversion_tt
		every_realm_county = {
			limit = {
				OR = {
					culture = { has_cultural_pillar = heritage_indo_aryan }
					culture = { has_cultural_pillar = heritage_byzantine }
					culture = { has_cultural_pillar = language_greek }
				}
			}
			random = {
				chance = 40
				set_county_culture = culture:indo_greek
				modifier = {
					add = development_level
				}
			}
		}
	}
	custom_tooltip = {
		text = yavana_vassal_conversion_tt
		every_vassal_or_below = {
			limit = {
				is_ai = yes
				OR = {
					culture = { has_cultural_pillar = heritage_indo_aryan }
					culture = { has_cultural_pillar = heritage_byzantine }
					culture = { has_cultural_pillar = language_greek }
				}
			}
			random_list = {
				1 = {
					set_culture = culture:indo_greek
					opinion_modifier = {
						opinion_target = ROOT
						who = THIS
						multiplier = 0.1
					}
				}
				1 = {}
			}
		}
	}
}
