# Tributary becoming unlanded by conquest should lose tributary status
# Tributary abdicating or dying should pass tributary status to heir


# Suzerain becoming unlanded by conquest should lose suzerain status
# Suzerain abdicating or dying should pass suzerain status to heir


on_game_start_after_lobby = {
    on_actions = {
        delay = { months = 1 }
        tributary_on_yearly_tribute
    }
}

quarterly_playable_pulse = {
    on_actions = {
        quarterly_trib_housekeeping_pulse
    }
}

tributary_on_yearly_tribute = {
    effect = {
        every_relation = { type = suzerain
            # Determine if still a suzerain
            # This shouldn't be necessary?
            # trigger_event = { id = tributaries.2004 }
            # Income
            trigger_event = { id = tributaries.2005 }
        }
        trigger_event = {
            on_action = tributary_on_yearly_tribute
            months = 36
        }
    }
}

on_war_won_attacker = {
    # The war notifications are handled in `effect` instead of `events` due to order of operations.
    # `effect` fires on THIS tick, `events` fires on the NEXT tick, and the war gets destroyed between this tick and the next.
    on_actions = {
        tributary_on_war_won_attacker
    }
}

tributary_on_war_won_attacker = {
    effect = {
        if = {
            limit = {
                scope:defender = {
                    OR = {
                        is_tributary = yes
                        is_suzerain = yes
                    }
                }
            }
            scope:attacker = {
                save_scope_as = tributary_slash_suzerain_war_winner
            }
            scope:defender = {
                save_scope_as = tributary_slash_suzerain_loser
            }
            scope:tributary_slash_suzerain_war_winner = {
                trigger_event = { id = tributaries.2003 days = 1 }
            }
        }
    }
}

# called when a war is started.
# same scopes are available in these events as in the CBs' on_declaration, this just fires for all CBs instead of a specific CB.
on_war_started = {
    on_actions = {
        tributary_on_war_started
    }
}

tributary_on_war_started = {
    effect = {
        every_relation = { type = suzerain
            save_scope_as = suzerain

            limit = {
                scope:war = {
                    any_war_participant = { NOT = { this = scope:suzerain } }
                }

                scope:defender = {
                    save_scope_as = call_to_arms_tribute
                    var:my_suzerain = {
                        trigger_event = { id = tributaries.2016 }
                    }
                }
            }
        }
    }
}

# character just about to die in root scope
# if a killer is know, it's set as scope:killer
#Triggered by code
on_death = {
    on_actions = {
        tributaries_on_death
    }
}

tributaries_on_death = {
    effect = {
        # Suzerain dies
        # Copy old Ruler tributaries list to his primary heir (on_death)
        if = {
            limit = { is_suzerain = yes }

            pass_suzerainship_to_heir = {
                SUZERAIN = this
            }
        }

        # Tributary dies
        # give the heir var:my_suzerain
        if = {
            limit = { is_tributary = yes }

            pass_tributary_type_to_heir = {
                TRIBUTARY = this
            }
        }
    }
}

quarterly_trib_housekeeping_pulse = {
    trigger = {
        OR = {
            has_variable = my_suzerain
            has_variable_list = permanent_tributaries
        }
    }
    effect = {
        if = { # Reassign tribs to their suzerain if they got detached somehow
            limit = {
                has_variable = my_suzerain
                NOT = {
                    var:my_suzerain = {
                        is_target_in_variable_list = { name = permanent_tributaries target = prev }
                    }
                }
            }
            var:my_suzerain = {
                add_to_variable_list = { name = permanent_tributaries target = prev }
            }
        }
        if = {
            limit = { # Suzerains
                has_variable_list = permanent_tributaries
            }
            save_scope_as = suzerain
            every_in_list = {
                variable = permanent_tributaries

                if = { # Remove trib relationship if the target is dead
                    limit = {
                        OR = {
                            is_alive = no
                            scope:suzerain = this
                        }
                    }
                    scope:suzerain = {
                        remove_list_variable = { name = permanent_tributaries target = prev }
                        remove_list_variable = { name = all_tributaries target = prev }
                    }
                }
                else_if = { # Reassign suzerain to their trib if they were detached somehow
                    limit = {
                        NOT = { has_variable = my_suzerain }
                    }
                    set_variable = { name = my_suzerain value = scope:suzerain }
                }
            }
        }
    }
}
