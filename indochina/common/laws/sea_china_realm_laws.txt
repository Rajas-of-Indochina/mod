@bureaucratic_authority_cooldown_years = 20

bureaucratic_authority = {
	default = bureaucratic_authority_1
	cumulative = yes
	flag = realm_law

	bureaucratic_authority_0 = {

		flag = can_change_succession_laws
		flag = can_change_partition_succession_laws
		flag = can_designate_heirs

		modifier = {
			vassal_tax_contribution_mult = -1
			vassal_levy_contribution_mult = -1
		}

		can_have = {
			realm_law_use_chinese_imperial_authority = yes
		}
		can_keep = {
			realm_law_use_chinese_imperial_authority = yes
		}
	}

	bureaucratic_authority_1 = {

		flag = vassal_internal_wars_banned
		flag = vassal_refusal_is_treason
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		flag = vassal_all_wars_banned
		flag = title_revocation_allowed
		flag = vassal_retraction_allowed

		modifier = {
			direct_vassal_opinion = -10

			vassal_tax_contribution_mult = 1.1
			vassal_levy_contribution_mult = 1.1
		}

		can_have = {
			realm_law_use_chinese_imperial_authority = yes
		}
		can_keep = {
			realm_law_use_chinese_imperial_authority = yes
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = bureaucratic_authority_2
							has_realm_law = bureaucratic_authority_3
							has_realm_law = bureaucratic_authority_4
							has_realm_law = bureaucratic_authority_5
						}
					}
					add = 1000
				}
			}
		}

		can_pass = {
			trigger_if = {
				limit = {
					NOR = {
						has_realm_law = bureaucratic_authority_2
						has_realm_law = bureaucratic_authority_3
						has_realm_law = bureaucratic_authority_4
						has_realm_law = bureaucratic_authority_5
					}
				}
				has_realm_law = bureaucratic_authority_0
				custom_description = {
					subject = root
					text = "has_bureaucratic_authority_cooldown"
					NOT = { has_variable = bureaucratic_authority_cooldown }
				}
			}
		}

		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = bureaucratic_authority_cooldown
				years = @bureaucratic_authority_cooldown_years
			}
		}
	}

	bureaucratic_authority_2 = {
		modifier = {
			direct_vassal_opinion = -10

			vassal_tax_contribution_mult = 0.1
			vassal_levy_contribution_mult = 0.1
		}

		can_have = {
			realm_law_use_chinese_imperial_authority = yes
		}
		can_keep = {
			realm_law_use_chinese_imperial_authority = yes
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = bureaucratic_authority_3
							has_realm_law = bureaucratic_authority_4
							has_realm_law = bureaucratic_authority_5
						}
					}
					add = 1000
				}
			}
		}

		can_pass = {
			trigger_if = {
				limit = {
					NOR = {
						has_realm_law = bureaucratic_authority_3
						has_realm_law = bureaucratic_authority_4
						has_realm_law = bureaucratic_authority_5
					}
				}
				has_realm_law = bureaucratic_authority_1
				custom_description = {
					subject = root
					text = "has_bureaucratic_authority_cooldown"
					NOT = { has_variable = bureaucratic_authority_cooldown }
				}
			}
		}

		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = bureaucratic_authority_cooldown
				years = @bureaucratic_authority_cooldown_years
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = bureaucratic_authority_0 }
				value = 1
			}
		}
	}

	bureaucratic_authority_3 = {
		modifier = {
			direct_vassal_opinion = -10

			vassal_tax_contribution_mult = 0.1
			vassal_levy_contribution_mult = 0.1
		}

		can_have = {
			realm_law_use_chinese_imperial_authority = yes
		}
		can_keep = {
			realm_law_use_chinese_imperial_authority = yes
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = bureaucratic_authority_4
							has_realm_law = bureaucratic_authority_5
						}
					}
					add = 1000
				}
			}
		}

		can_pass = {
			trigger_if = {
				limit = {
					NOR = {
						has_realm_law = bureaucratic_authority_4
						has_realm_law = bureaucratic_authority_5
					}
				}
				has_realm_law = bureaucratic_authority_2
				custom_description = {
					subject = root
					text = "has_bureaucratic_authority_cooldown"
					NOT = { has_variable = bureaucratic_authority_cooldown }
				}
			}
		}

		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = bureaucratic_authority_cooldown
				years = @bureaucratic_authority_cooldown_years
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = bureaucratic_authority_1 }
				value = 1
			}
		}
	}

	bureaucratic_authority_4 = {
		modifier = {
			direct_vassal_opinion = -10

			vassal_tax_contribution_mult = 0.1
			vassal_levy_contribution_mult = 0.1
		}

		can_have = {
			realm_law_use_chinese_imperial_authority = yes
		}
		can_keep = {
			realm_law_use_chinese_imperial_authority = yes
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = bureaucratic_authority_5
						}
					}
					add = 1000
				}
			}
		}

		can_pass = {
			trigger_if = {
				limit = {
					NOR = {
						has_realm_law = bureaucratic_authority_5
					}
				}
				has_realm_law = bureaucratic_authority_3
				custom_description = {
					subject = root
					text = "has_bureaucratic_authority_cooldown"
					NOT = { has_variable = bureaucratic_authority_cooldown }
				}
			}
		}

		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = bureaucratic_authority_cooldown
				years = @bureaucratic_authority_cooldown_years
			}
		}
	}

	bureaucratic_authority_5 = {
		modifier = {
			direct_vassal_opinion = -10

			vassal_tax_contribution_mult = 0.1
			vassal_levy_contribution_mult = 0.1
		}
		can_have = {
			realm_law_use_chinese_imperial_authority = yes
		}
		can_keep = {
			realm_law_use_chinese_imperial_authority = yes
		}

		pass_cost = {
			prestige = {
				add = 1000
			}
		}

		can_pass = {
			has_realm_law = bureaucratic_authority_4
			custom_description = {
				subject = root
				text = "has_bureaucratic_authority_cooldown"
				NOT = { has_variable = bureaucratic_authority_cooldown }
			}
		}

		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = bureaucratic_authority_cooldown
				years = @bureaucratic_authority_cooldown_years
			}
		}
	}
}


# Something for the vassals