@crown_authority_cooldown_years = 20
@mandala_authority_cooldown_years = 20
@tribal_authority_cooldown_years = 10

mandala_authority = {
	default = mandala_authority_1
	cumulative = yes
	flag = realm_law

	mandala_authority_0 = {
		modifier = {
			direct_vassal_opinion = 20
			vassal_tax_contribution_add = 0.20
		}

		can_have = { realm_law_use_mandala_authority = yes }
		can_keep = { realm_law_use_mandala_authority = yes }
	}

	mandala_authority_1 = {
		modifier = {
			direct_vassal_opinion = -20
			vassal_tax_contribution_add = 0.05
			vassal_levy_contribution_add = 0.10
		}

		can_have = { realm_law_use_mandala_authority = yes }
		can_keep = { realm_law_use_mandala_authority = yes }

		can_pass = {
			trigger_if = {
				limit = {
					NOR = {
						has_realm_law = mandala_authority_2
						has_realm_law = mandala_authority_3
					}
				}
				can_raise_authority_trigger = yes
			}

			trigger_if = {
				limit = { has_realm_law = mandala_authority_0 }
				custom_description = {
					subject = root
					text = "has_mandala_authority_cooldown"
					NAND = {
						has_variable = mandala_authority_cooldown
						NOT = {
							culture = { has_innovation = innovation_all_things }
						}
					}
				}
			}
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = mandala_authority_2
							has_realm_law = mandala_authority_3
						}
					}
					add = increase_crown_authority_prestige_cost
				}
			}
		}

		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = mandala_authority_cooldown
				years = @mandala_authority_cooldown_years
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = mandala_authority_0 }
				value = 1
			}
		}
	}

	mandala_authority_2 = {
		modifier = {
			direct_vassal_opinion = -10
			vassal_tax_contribution_add = 0.05
			vassal_levy_contribution_add = 0.05
		}
		flag = title_revocation_allowed
		flag = vassal_retraction_allowed

		can_have = { realm_law_use_mandala_authority = yes }
		can_keep = { realm_law_use_mandala_authority = yes }

		can_pass = {
			trigger_if = {
				limit = {
					NOR = {
						has_realm_law = mandala_authority_3
					}
				}
				can_raise_authority_trigger = yes
			}

			trigger_if = {
				limit = {
					NOT = { has_realm_law = mandala_authority_3 }
				}
				has_realm_law = mandala_authority_1
				custom_description = {
					subject = root
					text = "has_mandala_authority_cooldown"
					NAND = {
						has_variable = mandala_authority_cooldown
						NOT = {
							culture = { has_innovation = innovation_all_things }
						}
					}
				}
			}
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOT = { has_realm_law = mandala_authority_3 }
					}
					add = increase_crown_authority_prestige_cost
				}
			}
		}

		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = mandala_authority_cooldown
				years = @mandala_authority_cooldown_years
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = mandala_authority_1 }
				value = 1
			}
		}
	}

	mandala_authority_3 = {
		modifier = {
			direct_vassal_opinion = -20
			vassal_tax_contribution_add = 0.05
			vassal_levy_contribution_add = 0.05
		}
		flag = vassal_internal_wars_banned
		flag = vassal_refusal_is_treason
		flag = can_change_succession_laws
		flag = can_designate_heirs
		flag = titles_cannot_leave_realm_on_succession

		can_have = { realm_law_use_mandala_authority = yes }
		can_keep = { realm_law_use_mandala_authority = yes }

		can_pass = {
			can_raise_authority_trigger = yes

			has_realm_law = mandala_authority_2
			custom_description = {
				subject = root
				text = "has_mandala_authority_cooldown"
				NAND = {
					has_variable = mandala_authority_cooldown
					NOT = {
						culture = { has_innovation = innovation_all_things }
					}
				}
			}
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOT = { has_realm_law = mandala_authority_3 }
					}
					add = increase_crown_authority_prestige_cost
				}
			}
		}

		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = mandala_authority_cooldown
				years = @mandala_authority_cooldown_years
			}
		}
	}
}

stateless_authority = {
	default = stateless_authority_1
	cumulative = yes
	flag = realm_law

	stateless_authority_0 = {
		modifier = {
			direct_vassal_opinion = 10
		}

		can_have = { realm_law_use_stateless_authority = yes }
		can_keep = { realm_law_use_stateless_authority = yes }

		can_pass = {
			always = no
		}
	}

	stateless_authority_1 = {
		modifier = {
			direct_vassal_opinion = -10
		}

		can_have = { realm_law_use_stateless_authority = yes }
		can_keep = { realm_law_use_stateless_authority = yes }

		can_pass = {
			always = no
		}
	}

	stateless_authority_2 = {
		modifier = {
			direct_vassal_opinion = -10
		}

		can_have = { realm_law_use_stateless_authority = yes }
		can_keep = { realm_law_use_stateless_authority = yes }

		can_pass = {
			always = no
		}
	}

	stateless_authority_3 = {
		modifier = {
			direct_vassal_opinion = -10
		}

		can_have = { realm_law_use_stateless_authority = yes }
		can_keep = { realm_law_use_stateless_authority = yes }

		can_pass = {
			always = no
		}
	}
}