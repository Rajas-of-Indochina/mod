interest_faction = {
	casus_belli = populist_war

	leaders_allowed_to_leave = no
	player_can_join = no

	sort_order = 10

	name = FACTION_POPULIST_DYNAMIC_NAME

	short_effect_desc = populist_faction_short_effect_desc

	discontent_progress = {
		base = 0
	}

	power_threshold = {
		base = 80

		modifier = {
			add = 20
			faction_target = {
				has_perk = hard_rule_perk
			}
			desc = "FACTION_POWER_HARD_RULE"
		}

		#Lower the threshold depending on the state of other factions
		dynamic_power_threshold_scripted_modifier = {
			FACTION_TYPE1 = claimant_faction
			FACTION_TYPE2 = independence_faction
			FACTION_TYPE3 = liberty_faction
		}
	}

	requires_county = yes
	requires_character = no

	# Faction existence is valid
	is_valid = {
		always = no

		any_faction_county_member = {
			exists = this
		}
	}

	###########
	# Counties/characters are allowed to exist in the faction at all (will be kicked out if they fail these checks while already in it).
	is_character_valid = {
		# Only AIs are allowed to be in popular factions.
		is_ai = yes
	}

	is_county_valid = {
		# Counties can only be in a faction against the top liege in their realm (who is inherently independent).
		scope:faction.faction_target = holder.top_liege
	}

	###########
	# Counties/characters are allowed to create/join the faction (but will remain in faction if they fail these after joining).

	can_character_join = {
		# Must share this faction's faith.
		scope:faction = {
			has_variable = faction_faith
			root.faith = var:faction_faith

			has_variable = faction_culture
			root.culture = var:faction_culture
		}
	}

	can_county_join = {
		# Must share this faction's faith.
		scope:faction = {

			OR = {
				NOT = {
					has_variable = faction_faith
					has_variable = faction_culture
				}
				AND = {
					has_variable = faction_faith
					root.faith = var:faction_faith

					has_variable = faction_culture
					root.culture = var:faction_culture
				}
			}
		}
	}

	can_county_create = {
		always = no

		# Can only join factions against our top liege (not direct liege)
		scope:target = holder.top_liege
	}

	can_character_become_leader = {
		has_variable = rebel_leader_peasants
		var:rebel_leader_peasants = scope:faction
	}

	###########
	# Counties/characters are *willing* to join or remain in the faction (not blocked from being in the faction, but unless these are true they will not join the faction unless forced).

	county_create_score = {
		base = 100 # Counties can't create a new faction unless opinion is less than -20 (see summary below).

		# If a suitable Popular Faction already exists( of the same faith), side with it instead.
		modifier = {
			add = -1000
			scope:target = {
				any_targeting_faction = {
					faction_is_type = interest_faction

					any_faction_county_member = {
						this.title_province.faith = root.title_province.faith
						this.title_province.culture = root.title_province.culture
					}
				}
			}
		}
	}

	county_join_score =  {
		base = 100 # Counties won't join unless opinion is less than -15 (see summary below).
	}

	county_power = county_levies_to_raise

	ai_join_score = {
		base = 100

		# Leader never leaves
		modifier = {
			has_variable = rebel_leader_peasants
			add =  10000
		}
	}

	on_creation = {
		random_faction_county_member = {
			save_scope_as = founding_county
		}

		set_variable = {
			name = faction_culture
			value = scope:founding_county.culture
		}
		set_variable = {
			name = faction_faith
			value = scope:founding_county.faith
		}
	}

	on_destroy = {
		set_variable = {
			name = peasant_destroying
			value = yes
		}
		if = {
			limit = { exists = special_character }
			special_character = {
				if = {
					limit = {
						OR = {
							has_character_flag =  peasant_faction_claimant_without_title
							has_character_flag =  peasant_faction_random_peasant
						}
						has_variable = peasant_title
					}
					if = {
						limit = {
							has_variable = peasant_title
						}
						destroy_title = this.var:peasant_title
					}
					if = {
						limit = { # To make sure we aren't in debt
							gold > 0
						}
						remove_long_term_gold = gold # Zero out our wallet since the revolt is over and we're going back to being unlanded.
					}
				}
				if = {
					limit = {
						is_alive = yes # To prevent dead people from being checked for variables
					}
					if = {
						limit = {
							has_variable = rebel_leader_peasants
						}
						remove_variable = rebel_leader_peasants
					}
					remove_variable = peasant_title
					remove_character_flag = peasant_faction_random_peasant
					remove_character_flag = peasant_faction_claimant_without_title
					if = {
						limit = {
							has_character_flag =  peasant_faction_random_peasant
							NOT = {	has_character_flag = peasant_revolt_do_not_kill }
						}
						death = {
							death_reason = death_vanished
						}
					}
				}
			}
		}
	}

	demand = {
		setup_populist_leader_effect = yes
		# Faction leader is unhappy if they reach the point of needing to issue an ultimatim.
		faction_leader = {
			add_opinion = {
				modifier = angry_opinion
				target = root.faction_target
				opinion = -20
			}
		}

		# Refresh the faction's target title (best target may have changed between creation and pressing demands).
		get_popular_revolt_target_effect = { FACTION = this }

		# Save scopes that will be used in the demand event.
		save_scope_as = faction
		special_character = {
			save_scope_as = peasant_leader
		}
		special_title = {
			save_scope_as = target_title
		}

		# Fire the demand event.
		scope:faction.faction_target = {
			trigger_event = faction_demand.1001
		}
	}

	ai_demand_chance = {
		base = 100
	}

	on_war_start = {
		# Duchy initialization so we can concentrate the rebels in just a few important counties instead of spreading them over the entire realm.
		every_faction_county_member = {
			duchy = {
				add_to_list = areas_of_rebellion
			}
		}

		# Check where in the duchy the rebellion troops should spawn, then spawn them.
		every_in_list = {
			list = areas_of_rebellion
			save_temporary_scope_as = this_duchy

			# Determine where in the duchy those troops should spawn.
			ordered_in_de_jure_hierarchy = {
				# Troops can only spawn in counties that belong to our faction!
				limit = {
					tier = tier_county
					any_title_joined_faction = {
						this = root
					}
				}

				# Sort counties by how many levies they provide; rebels will spawn in the strongest county.
				order_by = total_county_levies

				title_province = {
					save_temporary_scope_as = local_center_of_rebellion
				}
			}

			# Spawn the faction troops in the designated location.
			root.faction_leader = {
				spawn_army = {
					levies = {
						value = 0
						joined_faction = {
							every_faction_county_member = {
								limit = {
									duchy = scope:local_center_of_rebellion.duchy
								}
								add = county_levies_to_raise
							}
						}
					}
					location = scope:local_center_of_rebellion
					war = root.faction_war
					name = populist_faction_event_troops
				}
			}
		}

		# Give the populist leader a small purse so they don't immediately go bankrupt with army maintenance.
		every_faction_county_member = {
			root.faction_leader = {
				add_gold = 25
			}
		}
	}

	leader_leaves = {
		# Should only trigger when the leader is captured in battle.
		if = {
			limit = {
				NOT = { has_variable = peasant_destroying }
				exists = faction_war
			}
			faction_war = {
				end_war = defender
			}
		}
	}

	character_allow_create = no

	special_character_title = "FACTIONS_WINDOW_LEADER"

	inherit_membership = yes

	multiple_targeting = yes
}

