communalist_faction = {
	casus_belli = communalist_uprising_cb

	leaders_allowed_to_leave = no
	player_can_join = yes

	sort_order = 3

	name = communalist_faction

	short_effect_desc = communalist_short_effect_desc

	discontent_progress = {
		base = 0

		common_discontent_progress_modifier = yes
	}

	power_threshold = {
		base = 80

		modifier = {
			add = 20
			faction_target = {
				has_perk = hard_rule_perk
			}
			desc = "FACTION_POWER_HARD_RULE"
		}

		#Lower the threshold depending on the state of other factions
		dynamic_power_threshold_scripted_modifier = {
			FACTION_TYPE1 = claimant_faction
			FACTION_TYPE2 = independence_faction
			FACTION_TYPE3 = liberty_faction
		}
	}

	requires_county = yes
	requires_character = no

	is_valid = {
		any_faction_county_member = {
			exists = this
		}
		trigger_if = {
			limit = {
				exists = special_character
			}
			special_character = {
				is_alive = yes
			}
		}
	}

	#################
	# Only commmunalist (or crypto-communalist) characters can join.
	is_character_valid = {

		trigger_if = {
			limit = {
				is_playable_character = yes
				exists = liege
				NOT = { this = liege }
			}
			liege = scope:faction.faction_target
			highest_held_title_tier >= tier_county
		}

		custom_tooltip = {
			text = "Must be openly or secretly communalist"
			OR = {
				faith = { is_communalist_faith = yes }
				secret_faith ?= { is_communalist_faith = yes }
			}
		}

		# Not forbidden from being in factions.
		NOT = {
			has_character_flag = joining_faction_block
		}
	}
	# Only communalist counties and counties with communalist minorities can join
	is_county_valid = {
		scope:faction.faction_target = holder.top_liege

		# communalist revolts don't happen to communalist lords
		NOT = { scope:faction.faction_target.faith = { is_communalist_faith = yes } }

		OR = {
			faith = { is_communalist_faith = yes }
			county_has_faith_minority_with_trigger = { TRIGGER = is_communalist_faith }
		}
	}

	#################

	can_character_join = {

		custom_tooltip = {
			text = "Must be openly or secretly communalist"
			OR = {
				faith = { is_communalist_faith = yes }
				secret_faith ?= { is_communalist_faith = yes }
			}
		}
	}

	can_county_join = {

		# communalist revolts don't happen to communalist lords
		NOT = { scope:faction.faction_target.faith = { is_communalist_faith = yes } }

		OR = {
			faith = { is_communalist_faith = yes }
			county_has_faith_minority_with_trigger = { TRIGGER = is_communalist_faith }
		}
	}

	can_county_create = {
		OR = {
			county_opinion < 0
			any_county_struggle = {
				has_struggle_phase_parameter = communalist_uprisings_more_common
			}
		}

		scope:target = holder.top_liege

		OR = {
			faith = { is_communalist_faith = yes }
			county_has_faith_minority_with_trigger = { TRIGGER = is_communalist_faith }
		}

		####
		# BLOCKERS
		####
		# General Faction immunity
		custom_description = {
			text = character_is_immune_to_factions
			subject = scope:target
			NOT = { scope:target = { immune_to_factions_trigger = yes } }
		}
	}

	can_character_become_leader = {
		OR = {
			AND = {
				has_variable = communalist_leader
				var:communalist_leader = scope:faction
			}
			is_landed = yes
		}
	}

	county_create_score = {
		base = -160

		modifier = {
			add = 100
			any_county_struggle = {
				has_struggle_phase_parameter = communalist_uprisings_more_common
			}
			desc = "COMMUNALIST_FACTION_STRUGGLE_PHASE_TT"
		}
		
		compare_modifier = {
			trigger = {
				NOT = { this.title_province.culture = scope:target.culture }
				this.title_province.culture = { has_same_culture_heritage = scope:target.culture }
			}
			value = county_opinion
			multiplier = -1.0
		}
		compare_modifier = {
			trigger = {
				NOT = { this.title_province.culture = { has_same_culture_heritage = scope:target.culture } }
			}
			value = county_opinion
			multiplier = -3.0
		}
		
		modifier = {
			add = 50
			scope:target = {has_realm_law = religious_minority_status_3}
			desc = "[GetLaw('religious_minority_status_3').GetName]"
		}
		
		modifier = {
			add = 25
			scope:target = {has_realm_law = religious_minority_status_2}
			desc = "[GetLaw('religious_minority_status_2').GetName]"
		}

		# Greatly reduced chance for a character's capital county to form a faction against them (extra -25 opinion needed).
		modifier = {
			add = -200
			this.title_province = scope:target.capital_province
		}

		liege_debt_modifier = {
			TARGET = scope:target
			SCORE_PER_DEBT_LEVEL = 20 # Worth ~5 opinon per debt level, up to a max of 140 (-35 opinion)
		}

		# Ruling Caste actually makes this WORSE. Communalists hate that shit.
		modifier = {
			add = 25
			NOT = {
				this.title_province.culture = scope:target.culture
			}
			scope:target.culture = {
				has_cultural_parameter = peasant_and_populist_factions_less_common
			}
		}

		# More likely for fully communalist counties to join
		modifier = {
			add = 50
			faith = { is_communalist_faith = yes }
		}

		# Large minorities add a smaller increase
		modifier = {
			add = 25
			county_has_large_faith_minority_with_trigger = { TRIGGER = is_communalist_faith }
		}

		# Small boost for small minorities
		modifier = {
			add = 10
			county_has_small_faith_minority_with_trigger = { TRIGGER = is_communalist_faith }
		}

		# 10-year 'grace period' from populist factions forming after game start
		modifier = {
			years_from_game_start <= 10
			debug_only = no
			factor = {
				value = 0
				if = {
					limit = { years_from_game_start >= 5 }
					add = years_from_game_start
					subtract = 5
					divide = 5 # In year 6 factions can begin forming, but at 20% weighting. This increases to 40% in year 7, 60% in year 8, etc., up to 100% in year 10 where things are then normal.
				}
			}
		}

		# Realm Stability Settings
		modifier = {
			add = 50
			has_game_rule = lesser_realm_stability
		}
		modifier = {
			add = -100
			has_game_rule = higher_realm_stability
		}
		modifier = {
			add = -200
			has_game_rule = extreme_realm_stability
		}

	}

	county_join_score = {
		base = -120

		modifier = {
			add = 100
			custom_tooltip = {
				any_county_struggle = {
					has_struggle_phase_parameter = communalist_uprisings_more_common
				}
				text = "COMMUNALIST_FACTION_STRUGGLE_PHASE_TT"
			}
			# desc = "COMMUNALIST_FACTION_STRUGGLE_PHASE_TT"
		}

		
		compare_modifier = {
			desc = "FACTION_REASON_CULTURAL_REASONS"
			trigger = {
				NOR = {
					this.title_province.culture = scope:faction.faction_target.culture
					AND = {
						scope:faction.faction_target = { has_active_diarchy = yes }
						this.title_province.culture = scope:faction.faction_target.diarch.culture
					}
				}
				OR = {
					this.title_province.culture = { has_same_culture_heritage = scope:faction.faction_target.culture }
					AND = {
						scope:faction.faction_target = { has_active_diarchy = yes }
						this.title_province.culture = { has_same_culture_heritage = scope:faction.faction_target.diarch.culture }
					}
				}
			}
			value = county_opinion
			multiplier = -1.0
		}
		compare_modifier = {
			desc = "FACTION_REASON_CULTURAL_REASONS"
			trigger = {
				NOR = {
					this.title_province.culture = scope:faction.faction_target.culture
					AND = {
						scope:faction.faction_target = { has_active_diarchy = yes }
						this.title_province.culture = scope:faction.faction_target.diarch.culture
					}
				}
			}
			value = county_opinion
			multiplier = -3.0
		}

		# Ruling Caste actually makes this WORSE. Communalists hate that shit.
		modifier = {
			desc = "FACTION_REASON_RULING_CASTE"
			add = 20
			NOT = {
				culture = scope:faction.faction_target.culture
			}
			scope:faction.faction_target.culture = {
				has_cultural_parameter = peasant_and_populist_factions_less_common
			}
		}

		# More likely for fully communalist counties to join
		modifier = {
			add = 50
			faith = { is_communalist_faith = yes }
		}

		# Large minorities add a smaller increase
		modifier = {
			add = 25
			custom_tooltip = {
				county_has_large_faith_minority_with_trigger = { TRIGGER = is_communalist_faith }
				text = "LARGE_COMMUNALIST_MINORITY_TT"
			}
		}

		# Small boost for small minorities
		modifier = {
			add = 10
			custom_tooltip = {
				county_has_small_faith_minority_with_trigger = { TRIGGER = is_communalist_faith }
				text = "SMALL_COMMUNALIST_MINORITY_TT"
			}
		}
		
		modifier = {
			add = 50
			scope:faction.faction_target = {has_realm_law = religious_minority_status_3}
			# desc = "RELIGIOUS_LAW_GROUP_DESC"
		}
		
		modifier = {
			add = 25
			scope:faction.faction_target = {has_realm_law = religious_minority_status_2}
			# desc = "RELIGIOUS_LAW_GROUP_DESC"
		}

		# Reduced chance for a character's capital county to join a faction against them (extra -10 opinion needed).
		modifier = {
			desc = "FACTION_REASON_CAPITAL_COUNTY"
			add = -80
			exists = scope:faction.faction_target.capital_province
			this.title_province = scope:faction.faction_target.capital_province
		}

		# Ruling Caste actually makes this WORSE. Communalists hate that shit.
		modifier = {
			desc = "FACTION_REASON_RULING_CASTE"
			add = 25
			NOT = {
				culture = scope:faction.faction_target.culture
			}
			scope:faction.faction_target.culture = {
				has_cultural_parameter = peasant_and_populist_factions_less_common
			}
		}

		# Realm Stability Settings
		modifier = {
			desc = "FACTION_REASON_GAME_RULE_REALM_STABILITY_LESSER"
			add = 50
			has_game_rule = lesser_realm_stability
		}
		modifier = {
			desc = "FACTION_REASON_GAME_RULE_REALM_STABILITY_HIGHER"
			add = -100
			has_game_rule = higher_realm_stability
		}
		modifier = {
			desc = "FACTION_REASON_GAME_RULE_REALM_STABILITY_EXTREME"
			add = -200
			has_game_rule = extreme_realm_stability
		}

		# Regent
		modifier = {
			desc = "FACTION_REASON_REGENT_CULTURAL_REASONS"
			add = -100
			NOT = { scope:faction.faction_target.culture = culture }
			scope:faction.faction_target = { has_active_diarchy = yes }
			scope:faction.faction_target.diarch.culture ?= culture
		}
		modifier = {
			desc = "FACTION_REASON_REGENT_FAITH_REASONS"
			add = -100
			NOT = { scope:faction.faction_target.faith = { is_communalist_faith = yes } }
			scope:faction.faction_target = { has_active_diarchy = yes }
			scope:faction.faction_target.diarch.faith ?= { is_communalist_faith = yes }
		}
	}

	county_power = county_levies_to_raise

	ai_join_score = {
		base = -25

		# Do not join a new faction if I am already at war.
		modifier = {
			add = -1000
			AND = {
				is_at_war = yes
				trigger_if = {
					limit = {
						exists = joined_faction
					}
					NOT = { joined_faction = scope:faction }
				}
			}
		}

		# Block characters from joining if they have a high opinion of the target
		modifier = {
			add = -1000
			save_temporary_opinion_value_as = { name = target_opinion target = scope:faction.faction_target }
			scope:target_opinion >= 80
		}

		# Block characters with the same struggle stance from joining unless they're zealots
		modifier = {
			add = -1000
			OR = {
				AND = {
					has_trait = pro_roman
					scope:faction.faction_target = { has_trait = pro_roman }
				}
				AND = {
					has_trait = pro_persian
					scope:faction.faction_target = { has_trait = pro_persian }
				}
				AND = {
					has_trait = pro_armenian
					scope:faction.faction_target = { has_trait = pro_armenian }
				}
			}
			NOT = { has_trait = zealous }
		}

		# Opinion of the Liege
		opinion_modifier = {
			who = root
			opinion_target = scope:faction.faction_target
			multiplier = -1
		}

		# Not a de jure vassal or consequent part of the realm is out of the De Jure
		modifier = {
			desc = "FACTION_REASON_RIGHTFUL"
			add =	{
				value = 125
				# Larger realms are inherently more rebellious.
				add = {
					value = sub_realm_size
					multiply = 2
				}
			}
			OR = {
				NOT = {
					scope:faction.faction_target = {
						is_rightful_liege_of = root
					}
				}
				any_sub_realm_county = {
					percent <= 0.5
					save_temporary_scope_as = current_county
					scope:faction.faction_target.primary_title = {
						any_in_de_jure_hierarchy = {
							this = scope:current_county
						}
					}
				}
			}
		}

		# Cultural and religious differences with liege
		modifier = { # Between +50 and +100 based on culture
			desc = "FACTION_REASON_CULTURAL_REASONS"
			NOT = { culture = { has_same_culture_heritage = scope:faction.faction_target.culture } }
			NOT = { culture = { has_cultural_parameter = doesnt_care_about_culture_faith_in_factions } }
			add = 50
		}

		liege_debt_modifier = {
			TARGET = scope:faction.faction_target
			SCORE_PER_DEBT_LEVEL = 10
		}

		# The AI is almost always unwilling to join a faction against their friends and lovers.
		modifier = {
			desc = "FACTION_REASON_TARGET_FRIEND_LOVER"
			add = -250
			OR = {
				has_relation_lover = scope:faction.faction_target
				has_relation_friend = scope:faction.faction_target
			}
		}

		# Dread. Does not apply if the faction is above the power threshold
		intimidated_from_faction_modifier = {
			TARGET = scope:faction.faction_target
			POWER =  scope:faction.faction_power
			THRESHOLD = scope:faction.faction_power_threshold
		}

		# Leader never leaves
		modifier = {
			desc = "FACTION_REASON_FACTION_LEADER"
			has_variable = rebel_leader_communalists
			add =  10000
		}

		# Ruling Caste
		modifier = {
			desc = "FACTION_REASON_RULING_CASTE"
			add = 20
			NOT = {
				culture = scope:faction.faction_target.culture
			}
			scope:faction.faction_target.culture = {
				has_cultural_parameter = peasant_and_populist_factions_less_common
			}
		}

		# Realm Stability Settings
		modifier = {
			desc = "FACTION_REASON_GAME_RULE_REALM_STABILITY_LESSER"
			add = 25
			has_game_rule = lesser_realm_stability
		}
		modifier = {
			desc = "FACTION_REASON_GAME_RULE_REALM_STABILITY_HIGHER"
			add = -50
			has_game_rule = higher_realm_stability
		}
		modifier = {
			desc = "FACTION_REASON_GAME_RULE_REALM_STABILITY_EXTREME"
			add = -100
			has_game_rule = extreme_realm_stability
		}

		##########################
		# Faction 'Stacking' Factors, attempts to cluster AI rulers into several powerful factions instead of many weak ones.
		modifier = {
			desc = "FACTION_REASON_POWER_MINIMAL"
			scope:faction.faction_power < scope:faction.faction_power_minimal
			liege = {
				any_targeting_faction = {
					faction_is_type = independence_faction
					faction_power >= faction_power_minimal
				}
			}
			factor = faction_weight_factor_power_minimal_penalty
		}
		modifier = {
			desc = "FACTION_REASON_POWER_HALFWAY_THRESHOLD"
			scope:faction.faction_power >= scope:faction.faction_power_halfway_threshold
			factor = faction_weight_factor_power_halfway_threshold
		}
		modifier = {
			desc = "FACTION_REASON_POWER_PUSHING_THRESHOLD"
			scope:faction.faction_power >= scope:faction.faction_power_pushing_threshold
			factor = faction_weight_factor_power_pushing_threshold
		}
		modifier = {
			desc = "FACTION_REASON_POWER_THRESHOLD"
			scope:faction.faction_power >= scope:faction.faction_power_threshold
			factor = faction_weight_factor_power_exceeds_threshold
		}

		# Small multiplier for my neighbors already in the Faction
		modifier = {
			desc = "FACTION_REASON_NEIGHBORS"

			scope:faction = {
				any_faction_member = { #suppress the description printout if factor is 1
					any_neighboring_realm_same_rank_owner = {
						this = root
					}
				}
			}

			factor = {
				value = 1
				scope:faction = {
			    	every_faction_member = {
			    		if = {
			    			limit = {
				    			any_neighboring_realm_same_rank_owner = {
				    				this = root
				    			}
							}
			    			add = 0.25
			    		}		
			    	}
		    	}
	    	}
	    }

	    modifier = {
			desc = "FACTION_REASON_POWERFUL_VASSAL"
	    	factor = 2
			is_powerful_vassal_of = scope:faction.faction_target
	    }

	    struggle_faction_modifiers = yes
	}

	on_creation = {
		random_faction_county_member = {
			save_scope_as = founding_county
		}
	}

	on_destroy = {
		set_variable = {
			name = communalist_destroying
			value = yes
		}
		if = {
			limit = { exists = special_character }
			special_character = {
				if = {
					limit = {
						has_character_flag = communalist_peasant_leader
						has_variable = special_title
					}
					if = {
						limit = {
							has_variable = communalist_title
						}
						destroy_title = this.var:communalist_title
					}
					if = {
						limit = { # To make sure we aren't in debt
							gold > 0
						}
						remove_long_term_gold = gold # Zero out our wallet since the revolt is over and we're going back to being unlanded.
					}
				}	
				if = {
					limit = { is_alive = yes }
					if = {
						limit = { has_variable = rebel_leader_communalists }
						remove_variable = rebel_leader_communalists
					}
					remove_variable = communalist_title
					remove_character_flag = communalist_peasant_leader
					if = {
						limit = {
							has_character_flag = communalist_peasant_leader
							NOT = { has_character_flag = communalist_uprising_do_not_kill }
						}
						death = {
							death_reason = death_vanished
						}
					}
				}
			}
	
		}
	}

	demand = {
		if = {
			limit = { not = { exists = faction_leader } }
			setup_communalist_leader_effect = yes
		}
		else = {
			setup_landed_communalist_leader_effect = yes
		}
		faction_leader = {
			add_opinion = {
				modifier = angry_opinion
				target = root.faction_target
				opinion = -20
			}
			add_trait = peasant_leader
		}

		get_popular_revolt_target_effect = { FACTION = this }

		save_scope_as = faction
		special_character = { save_scope_as = communalist_leader }
		special_title = { save_scope_as = target_title }

		save_temporary_scope_as = county_faction

		every_faction_county_member = {
			limit = {
				holder = {
					NOT = { this = scope:faction.faction_target }
					NAND = {
						exists = joined_faction
						joined_faction = {
							this = scope:county_faction
						}
					}
					OR = {
						is_vassal_of = scope:faction.faction_target
						is_ai = no
					}
					NOT = { is_in_list = popular_faction_vassal_targets }
				}
			}
			holder = {
				add_to_list = popular_faction_vassal_targets
			}
		}
		every_faction_county_member = {
			holder = {
				every_liege_or_above = {
					limit = {
						NOT = { this = scope:faction.faction_target }
						NAND = {
							exists = joined_faction
							joined_faction = {
								this = scope:county_faction
							}
						}
						OR = {
							is_vassal_of = scope:faction.faction_target
							is_ai = no
						}
						NOT = { is_in_list = popular_faction_vassal_targets }
					}
					add_to_list = popular_faction_vassal_targets
				}
			}
		}
		
		# Check if there is a player affected by the faction. AI rulers are blocked from accepting the faction demand if so.
		if = {
			limit = {
				any_in_list = {
					list = popular_faction_vassal_targets
					is_ai = no
				}
			}
			scope:faction = {
				set_variable = {
					name = faction_targets_player
					value = yes
				}
			}
		}
		
		# Fire the demand event. A follow up event will be sent to affected vassals.
		scope:faction.faction_target = {
			trigger_event = communalist.0001
		}
	}

	ai_demand_chance = {
		base = 100
	}

	on_war_start = {
		# Duchy initialization so we can concentrate the rebels in just a few important counties instead of spreading them over the entire realm.
		every_faction_county_member = {
			duchy = {
				add_to_list = areas_of_rebellion
			}
		}

		# Check where in the duchy the rebellion troops should spawn, then spawn them.
		every_in_list = {
			list = areas_of_rebellion
			save_temporary_scope_as = this_duchy

			# Determine where in the duchy those troops should spawn.
			ordered_in_de_jure_hierarchy = {
				# Troops can only spawn in counties that belong to our faction!
				limit = {
					tier = tier_county
					any_title_joined_faction = {
						this = root
					}
				}

				# Sort counties by how many levies they provide; rebels will spawn in the strongest county.
				order_by = total_county_levies

				title_province = {
					save_temporary_scope_as = local_center_of_rebellion
				}
			}

			# Spawn the faction troops in the designated location.
			root.faction_leader = {
				spawn_popular_revolt_troops = yes
			}
			
			# Give the populist leader a commander for each stack of troops.
			create_character = {
				template = new_commander_character
				location = scope:local_center_of_rebellion
				faith = root.faction_leader.faith
				culture = root.faction_leader.culture
				save_scope_as = new_populist_commander
				gender_female_chance = {
					if = {
						limit = { root.faction_leader.culture = { has_cultural_parameter = martial_custom_male_only_combatant } }
						add = 0
					}
					else_if = {
						limit = { root.faction_leader.culture = { has_cultural_parameter = martial_custom_female_only_combatant } }
						add = 100
					}
					else = {
						add = 50
					}
				}
			}
			scope:new_populist_commander = {
				set_employer = root.faction_leader
			}
		}

		# Give the populist leader a small purse so they don't immediately go bankrupt with army maintenance.
		every_faction_county_member = {
			root.faction_leader = {
				add_gold = 25
			}
		}

		every_faction_member = {
			if = {
				limit = {
					exists = secret_faith
					secret_faith = { is_communalist_faith = yes }
				}
				set_character_faith_with_conversion = secret_faith
				remove_character_secret_faith = yes
			}
		}
	}

	leader_leaves = {
		# Should only trigger when the leader is captured in battle.
		if = {
			limit = {
				special_character = {
					is_alive = no
				}
			}
			faction_war = {
				end_war = defender
			}
			destroy_faction = yes
		}
		if = {
			limit = {
				NOT = { has_variable = communalist_destroying }
				exists = faction_war
			}
			faction_war = {
				end_war = defender
			}
		}
	}

	character_allow_create = no

	special_character_title = "FACTIONS_WINDOW_LEADER"

	inherit_membership = yes

	multiple_targeting = yes
}

